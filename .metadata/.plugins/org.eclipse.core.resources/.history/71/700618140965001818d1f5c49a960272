package io.javabrains.springbootstarter.course;

import java.util.Arrays;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RestController;

/* Mark Rest Controller */
@RestController
public class CourseController {
	
	/* Marks as needing dependency injection */
	@Autowired
	private CourseService topicService;
	
	/* When /topics is requested: the topicService is ran */
	@RequestMapping("/topics")
	public List<Course> getAllTopics() {
		return topicService.getAllTopics();
	}
	
	/* matches /topics/<anything> with getTopic method */
	/* can also do @PathVariable("id") String id*/
	@RequestMapping("/topics/{id}")
	public Course getTopic(@PathVariable String id) { 
		return topicService.getTopic(id);
	}
	
	/* bind post to topics (make a new topic) */
	@RequestMapping(method=RequestMethod.POST, value="/topics")
	public void addTopic(@RequestBody Course topic) { /* picks instance from json request*/
		topicService.addTopic(topic);
	}
	
	/* bind put req (update topic) */
	@RequestMapping(method=RequestMethod.PUT, value="/topics/{id}")
	public void updateTopic(@RequestBody Course topic, @PathVariable String id) { /* picks instance from json request*/
		topicService.updateTopic(id, topic);
	}
	
	/* bind delete topic */
	@RequestMapping(method=RequestMethod.DELETE, value="/topics/{id}")
	public void deleteTopic(@PathVariable String id) { /* picks instance from json request*/
		topicService.deleteTopic(id);
	}
	
}
